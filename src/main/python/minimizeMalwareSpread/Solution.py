from typing import Set
from typing import List

class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        maxValue = 0
        maxIndex = -1
        for i in initial:
            reachedNodes = self.getReachableNodes(graph, i, {i})
            if len(reachedNodes.intersection(initial)) >= 2:
                continue

            if len(reachedNodes) > maxValue:
                maxValue = len(reachedNodes)
                maxIndex = i
            if len(reachedNodes) == maxValue and maxIndex > i:
                maxIndex = i


        if maxIndex < 0:
            return min(initial)
        return maxIndex

    def getReachableNodes(self, graph: List[List[int]], position, visited: Set) -> Set:
        for i in range(len(graph[position])):
            if graph[position][i] == 1:
                if i not in visited:
                    visited.add(i)
                    self.getReachableNodes(graph, i, visited)

        return visited
